# data file for the Fltk User Interface Designer (fluid)
version 1.0308
header_name {.h}
code_name {.cxx}
decl {\#include <functional>} {public global
}

decl {\#include <Fl/Fl_Double_Window.H>} {public global
}

class MainWindow {open : {public Fl_Double_Window}
} {
  decl {std::function<int(int)> handler;} {private local
  }
  Function {MainWindow(int x, int y, const char *name) : Fl_Double_Window(x, y, name)} {open
  } {
    code {} {}
  }
  Function {handle(int event)} {open return_type int
  } {
    code {if (handler != nullptr)
{
	int ret{handler(event)};
	if (ret == 0)
		return Fl_Double_Window::handle(event);
	else
		return ret;
}
return Fl_Double_Window::handle(event);} {}
  }
  Function {setHandler(std::function<int(int)> handler)} {open return_type void
  } {
    code {this->handler = handler;} {}
  }
}

class MainUi {open
} {
  Function {MainUi()} {open
  } {
    Fl_Window window {
      label {Game of Fifteen} open
      xywh {128 182 450 265} type Double when 8
      class MainWindow visible
    } {
      Fl_Group puzzleGroup {
        xywh {10 10 210 210} box ENGRAVED_FRAME
      } {
        Fl_Button {} {
          xywh {15 15 50 50}
        }
        Fl_Button {} {
          xywh {65 15 50 50}
        }
        Fl_Button {} {
          xywh {115 15 50 50}
        }
        Fl_Button {} {
          xywh {165 15 50 50}
        }
        Fl_Button {} {
          xywh {15 65 50 50}
        }
        Fl_Button {} {
          xywh {65 65 50 50}
        }
        Fl_Button {} {
          xywh {115 65 50 50}
        }
        Fl_Button {} {
          xywh {165 65 50 50}
        }
        Fl_Button {} {
          xywh {15 115 50 50}
        }
        Fl_Button {} {
          xywh {65 115 50 50}
        }
        Fl_Button {} {
          xywh {115 115 50 50}
        }
        Fl_Button {} {
          xywh {165 115 50 50}
        }
        Fl_Button {} {
          xywh {15 165 50 50}
        }
        Fl_Button {} {
          xywh {65 165 50 50}
        }
        Fl_Button {} {
          xywh {115 165 50 50}
        }
        Fl_Button {} {
          xywh {165 165 50 50}
        }
      }
      Fl_Button shuffleButton {
        label Shuffle
        xywh {10 225 210 30}
      }
      Fl_Group heuGroup {
        label Heuristic open
        xywh {230 30 210 80} box ENGRAVED_FRAME
      } {
        Fl_Round_Button linRadButton {
          label {Linear Conflict} selected
          tooltip {Faster heuristic based on Manhattan Distance} xywh {240 35 190 20} down_box ROUND_DOWN_BOX
          code0 {o->type(FL_RADIO_BUTTON);}
        }
        Fl_Round_Button manRadButton {
          label {Manhattan Distance}
          tooltip {Average speed heuristic} xywh {240 60 190 20} down_box ROUND_DOWN_BOX
          code0 {o->type(FL_RADIO_BUTTON);}
        }
        Fl_Round_Button misRadButton {
          label {Misplaced Tiles}
          tooltip {Slowest and simplest heuristic} xywh {240 85 190 20} down_box ROUND_DOWN_BOX
          code0 {o->type(FL_RADIO_BUTTON);}
        }
      }
      Fl_Output heuOutput {
        label {Heuristic value:}
        xywh {320 117 115 28} labelsize 13
      }
      Fl_Output invOutput {
        label {Inversion count:}
        xywh {320 152 115 28} labelsize 12
      }
      Fl_Output elapsedOutput {
        label {Elapsed time:}
        xywh {320 187 115 28}
      }
      Fl_Button helpButton {
        label {?}
        tooltip Help xywh {410 225 30 30}
      }
      Fl_Button solveButton {
        label Solve
        xywh {260 225 110 30}
      }
      Fl_Repeat_Button prevButton {
        label {<}
        xywh {230 225 30 30} deactivate
      }
      Fl_Repeat_Button nextButton {
        label {>}
        xywh {370 225 30 30} deactivate
      }
    }
  }
  Function {~MainUi()} {open
  } {
    code {delete window;} {}
  }
  Function {show()} {open return_type void
  } {
    code {window->show();} {}
  }
}
